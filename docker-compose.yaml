services:
  zookeeper:
    build: .
    command: ['./bin/zookeeper-server-start.sh', '/config/zookeeper']
    volumes:
      - ./config:/config
      # - ./data/zookeeper:/zookeeper
  broker1:
    build: .
    depends_on: 
      - zookeeper
    command: ['./bin/kafka-server-start.sh', '/config/broker1']
    volumes:
      - ./config:/config
      # - ./data/broker1:/kafka-logs
  broker2:
    build: .
    depends_on: 
      - zookeeper
    command: ['./bin/kafka-server-start.sh', '/config/broker2']
    volumes:
      - ./config:/config
      # - ./data/broker2:/kafka-logs
  broker3:
    build: .
    depends_on: 
      - zookeeper
    command: ['./bin/kafka-server-start.sh', '/config/broker3']
    volumes:
      - ./config:/config
      # - ./data/broker3:/kafka-logs
  producer-topica-js:
    image: node
    deploy:
      replicas: 2
    command: ['node', 'producer.js']
    working_dir: /app
    environment:
      - topic=topica
    volumes:
      - ./src/services-js:/app


  producer-topicb-js:
    image: node
    deploy:
      replicas: 2
    command: ['node', 'producer.js']
    working_dir: /app
    environment:
      - topic=topicb
    volumes:
      - ./src/services-js:/app

  consumer-js:
    image: node
    deploy:
      replicas: 10
    command: ['node', 'consumer.js']
    working_dir: /app
    volumes:
      - ./src/services-js:/app


  consumer2-js:
    image: node
    deploy:
      replicas: 2
    command: ['node', 'consumer2.js']
    working_dir: /app
    volumes:
      - ./src/services-js:/app